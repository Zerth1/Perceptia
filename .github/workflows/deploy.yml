name: Perceptia

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  run-opengl:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]  # Cross-platform setup

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Adjust Python version if needed

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Or manually:
          # pip install PyOpenGL glfw numpy

      # OS-Specific OpenGL Setup
      
      # Linux Setup (Ubuntu)
      - name: Install OpenGL Dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          libglfw3 \
          libglfw3-dev \
          mesa-utils \
          libosmesa6-dev \
          libx11-dev
          # Ensure you have a virtual display set up for headless rendering
          Xvfb :99 -screen 0 1920x1080x24 &
          export DISPLAY=:99
          echo "Virtual display started on DISPLAY=:99"
      # Windows Setup Using vcpkg
      # Windows Setup Using vcpkg
      - name: Install OpenGL and GLFW using vcpkg on Windows
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          # Install git if not already available
          choco install -y git
          
          # Clone the vcpkg repository
          git clone https://github.com/microsoft/vcpkg.git
      
          # Navigate to the vcpkg directory and bootstrap it
          cd vcpkg
          .\bootstrap-vcpkg.bat
      
          # Install GLFW and OpenGL dependencies using vcpkg
          .\vcpkg install glfw3
          .\vcpkg install opengl
          .\vcpkg integrate install
      
          # Set the vcpkg toolchain path for later builds (if necessary)
          [Environment]::SetEnvironmentVariable('VCPKG_ROOT', "$(pwd)\vcpkg", 'User')
      
          # Check that vcpkg installed properly
          .\vcpkg list

      # macOS Setup
      - name: Install OpenGL Dependencies on macOS
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install glfw
          brew install mesa
          brew install libosmesa # Software renderer for OpenGL
          # Force software rendering (NSGL -> Software OpenGL rendering fallback)
          export LIBGL_ALWAYS_SOFTWARE=1
      
          # Verify OpenGL installation and display version (for debugging)
          glxinfo | grep "OpenGL version"
          
          # Running the application in the background (for non-blocking)
          nohup python main.py &

      - name: Run Python OpenGL Application
        env:
          DISPLAY: ":99"  # Only set for Linux to use Xvfb
        run: |
          python main.py  # Replace with your script name
