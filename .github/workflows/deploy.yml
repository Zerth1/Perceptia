name: Perceptia

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  run-opengl:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]  # Cross-platform setup

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Adjust Python version if needed

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Or manually:
          # pip install PyOpenGL glfw numpy

      # OS-Specific OpenGL Setup
      
      # Linux Setup (Ubuntu)
      - name: Install OpenGL Dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          libglfw3 \
          libglfw3-dev \
          mesa-utils \
          libosmesa6-dev \
          libx11-dev
          # Ensure you have a virtual display set up for headless rendering
          Xvfb :99 -screen 0 1920x1080x24 &
          export DISPLAY=:99
          echo "Virtual display started on DISPLAY=:99"
      # Windows Setup Using vcpkg
      # Windows Setup Using vcpkg
      # Windows Setup - Install Git, OpenGL, and GLFW using Chocolatey and vcpkg
      - name: Install dependencies on Windows
        if: runner.os == 'Windows'
        run: |
          # Ensure Chocolatey is installed first (if not already present)
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
          
          # Retry mechanism for installing Git
          $ErrorActionPreference = "Stop"
          $maxRetries = 3
          $attempt = 0
          while ($attempt -lt $maxRetries) {
            try {
              choco install git.install -y
              Write-Host "Git installed successfully!"
              break
            } catch {
              $attempt++
              Write-Warning "Attempt $attempt failed, retrying..."
              Start-Sleep -Seconds 10
            }
          }
      
          # Install OpenGL and GLFW via vcpkg (using GitHub Actions' runner)
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg install glfw3
          .\vcpkg install opengl
          .\vcpkg integrate install
      
          # Verify installations
          git --version
          .\vcpkg list
      
          # Run the application
          python main.py


      # macOS Setup
      - name: Install OpenGL Dependencies on macOS
        if: runner.os == 'macOS'
        run: |
          # Update Homebrew and install necessary libraries
          brew update
          brew install glfw
          brew install mesa  # Mesa is available on macOS for OpenGL
      
          # You can try forcing software rendering if needed (e.g., if you encounter OpenGL context issues)
          export LIBGL_ALWAYS_SOFTWARE=1
      
          # Run the application (for debugging, if OpenGL context is needed)
          python main.py

      - name: Run Python OpenGL Application
        env:
          DISPLAY: ":99"  # Only set for Linux to use Xvfb
        run: |
          python main.py  # Replace with your script name
