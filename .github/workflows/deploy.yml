name: Perceptia

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  run-opengl:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]  # Cross-platform setup

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Adjust Python version if needed

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Or manually:
          # pip install PyOpenGL glfw numpy

      # OS-Specific OpenGL Setup
      
      # Linux Setup (Ubuntu)
      - name: Install OpenGL Dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          libglfw3 \
          libglfw3-dev \
          mesa-utils \
          libosmesa6-dev \
          libx11-dev
          # Ensure you have a virtual display set up for headless rendering
          Xvfb :99 -screen 0 1920x1080x24 &
          export DISPLAY=:99
          echo "Virtual display started on DISPLAY=:99"
      # Windows Setup
      - name: Install OpenGL Dependencies on Windows
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          # Install OpenGL, Mesa, GLFW using Chocolatey
          choco install -y opengl mesa glfw
          # Force indirect OpenGL rendering to avoid WGL errors
          $env:LIBGL_ALWAYS_INDIRECT = "1"
          [Environment]::SetEnvironmentVariable("LIBGL_ALWAYS_INDIRECT", "1", "Machine")
          Write-Output "LIBGL_ALWAYS_INDIRECT set to 1"

      # macOS Setup
      - name: Install OpenGL Dependencies on macOS
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install glfw
          brew install mesa

      - name: Run Python OpenGL Application
        env:
          DISPLAY: ":99"  # Only set for Linux to use Xvfb
        run: |
          python main.py  # Replace with your script name
